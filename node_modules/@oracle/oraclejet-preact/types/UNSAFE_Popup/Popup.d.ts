import { JSX, RefObject } from 'preact';
import { Offset, Placement, Coords, FlipOptions, ShiftOptions } from '../UNSAFE_Floating';
declare type IntrinsicProps = Pick<JSX.HTMLAttributes<HTMLDivElement>, 'children'>;
declare type Props = IntrinsicProps & {
    /**
     * Determines whether the Popup is open.
     */
    isOpen: boolean;
    /**
     * Anchor for Popup's placement.
     */
    anchorRef: RefObject<HTMLElement | Coords>;
    /**
     * Placement of the Popup relative to the anchor.
     */
    placement?: Placement;
    /**
     * Popup's offset from the anchor.
     */
    offset?: Offset;
    /**
     * Popup's flip options
     */
    flipOptions?: FlipOptions;
    /**
     * Popup's shift options
     */
    shiftOptions?: ShiftOptions;
    /**
     * Popup's click outside callback.
     */
    onClickOutside?: (event: MouseEvent) => void;
    /**
     * Tail
     */
    tail?: 'none' | 'simple';
    /**
     * Property that triggers a callback after the animation is done
     */
    onTransitionEnd?: (value: boolean) => void;
};
export declare const Popup: import("preact").FunctionalComponent<Omit<Props, "ref"> & {
    ref?: import("preact").Ref<HTMLElement | null> | undefined;
}>;
export {};
