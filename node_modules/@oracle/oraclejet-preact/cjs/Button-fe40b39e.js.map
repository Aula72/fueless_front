{"version":3,"file":"Button-fe40b39e.js","sources":["../../src/UNSAFE_Button/ButtonLayout.tsx","../../src/UNSAFE_Button/Button.tsx"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport { ComponentChildren, ComponentProps } from 'preact';\nimport { cssProps } from '@oracle/oraclejet-cssprops';\nimport { classNames } from '../utils/UNSAFE_classNames';\nimport { BaseButton } from '../UNSAFE_BaseButton';\n\nexport type ButtonDisplay = 'icons' | 'label' | 'all';\n\nexport type Props = {\n  /**\n   *The default slot is the button's text label. The oj-c-button element accepts plain text or DOM nodes as children for the default slot.\"\n   */\n  children?: ComponentChildren;\n\n  /**\n   * The startIcon is the button's start icon.\n   */\n  startIcon?: ComponentChildren;\n\n  /**\n   * The endIcon is the button's end icon.\n   */\n  endIcon?: ComponentChildren;\n\n  /**\n   * Styling can be used for customizing icon layout by limiting padding (\"embedded\")\n   */\n  styling?: 'default' | 'embedded';\n\n  /**\n   * The size indicates how large the button is rendered.\n   */\n  size?: ComponentProps<typeof BaseButton>['size'];\n\n  /**\n   * Display indicates whether the label, the icons, or all elements should be rendered by the button.\n   */\n  display?: ButtonDisplay;\n};\n\nexport const compStyles = {\n  text: cssProps`\n    ${{\n      overflowX: 'hidden',\n      overflowY: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap',\n      display: 'inline-flex'\n    }}\n  `,\n\n  icon: cssProps`\n    ${{\n      display: 'inline-flex',\n      fontSize: 'var(--oj-c-PRIVATE-DO-NOT-USE-button-icon-size)',\n      fontWeight: 'normal',\n      marginTop: 0,\n      marginBottom: 0\n    }}\n  `,\n\n  startText: cssProps`\n    ${{\n      marginInlineStart: 'var(--oj-c-PRIVATE-DO-NOT-USE-base-button-text-to-edge-padding)'\n    }}\n  `,\n\n  endText: cssProps`\n    ${{\n      marginInlineEnd: 'var(--oj-c-PRIVATE-DO-NOT-USE-base-button-text-to-edge-padding)'\n    }}\n  `,\n\n  startIcon: cssProps`\n    ${{\n      marginInlineEnd: 'var(--oj-c-PRIVATE-DO-NOT-USE-button-icon-to-text-padding)',\n      marginInlineStart: 'var(--oj-c-PRIVATE-DO-NOT-USE-button-icon-to-edge-padding)'\n    }}\n  `,\n\n  startIconOnly: cssProps`\n    ${{\n      marginInlineEnd: 'var(--oj-c-PRIVATE-DO-NOT-USE-button-icon-to-edge-padding)',\n      marginInlineStart: 'var(--oj-c-PRIVATE-DO-NOT-USE-button-icon-to-edge-padding)'\n    }}\n  `,\n\n  endIcon: cssProps`\n    ${{\n      marginInlineStart: 'var(--oj-c-PRIVATE-DO-NOT-USE-button-icon-to-text-padding)',\n      marginInlineEnd: 'var(--oj-c-PRIVATE-DO-NOT-USE-button-icon-to-edge-padding)'\n    }}\n  `,\n\n  label: cssProps`\n    ${{\n      cursor: 'inherit',\n      display: 'inline-flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      width: '100%',\n      height: '100%'\n    }}\n  `\n};\n\nconst isNullOrUndefined = (\n  value: ComponentChildren | null | undefined\n): value is null | undefined => {\n  return value === null || value === undefined;\n};\n\nexport function ButtonLayout({\n  size = 'md',\n  display = 'all',\n  styling = 'default',\n  ...props\n}: Props) {\n  const showIcons = display === 'all' || display === 'icons';\n  const showText = display === 'all' || display === 'label';\n  const labelClass = compStyles.label;\n  const isOnlyIcon = props.startIcon && (display === 'icons' || !props.children) && !props.endIcon;\n  const isEmbedded = styling === 'embedded';\n  const textStartIcon = !isNullOrUndefined(props.startIcon) && display === 'all';\n  const textEndIcon = !isNullOrUndefined(props.endIcon) && display === 'all';\n  const isTwoIcons = props.startIcon && props.endIcon;\n\n  const endIconClass = `${compStyles.icon} oj-c-button-layout-${size} ${compStyles.endIcon}`;\n  const startIconStyles = classNames([\n    compStyles.icon,\n    isEmbedded ? `oj-c-button-layout-embedded-${size}` : `oj-c-button-layout-${size}`,\n    isOnlyIcon ? compStyles.startIconOnly : compStyles.startIcon\n  ]);\n  const textStyles = classNames([\n    compStyles.text,\n    textStartIcon && !isTwoIcons && compStyles.endText,\n    textEndIcon && !isTwoIcons && compStyles.startText\n  ]);\n\n  return (\n    <span class={labelClass}>\n      {showIcons && props.startIcon && <span class={startIconStyles}>{props.startIcon}</span>}\n      {showText && props.children && <span class={textStyles}> {props.children} </span>}\n      {showIcons && props.endIcon && <span class={endIconClass}>{props.endIcon}</span>}\n    </span>\n  );\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport { ComponentChildren, ComponentProps, Ref } from 'preact';\nimport { BaseButton } from '../UNSAFE_BaseButton';\nimport { ButtonLayout } from './ButtonLayout';\nimport type { DimensionProps } from '../utils/UNSAFE_interpolations/dimensions';\nimport { forwardRef } from 'preact/compat';\nimport { HTMLAttributesSignalExcluded } from '../utils/UNSAFE_attributeUtils';\n\ntype IntrinsicProps = Pick<HTMLAttributesSignalExcluded<HTMLButtonElement>, 'autofocus'>;\n\ntype WidthProps = Pick<DimensionProps, 'width'>;\n\ntype Props = IntrinsicProps &\n  WidthProps & {\n    /**\n     * The startIcon is the button's start icon.\n     */\n    startIcon?: ComponentChildren;\n\n    /**\n     * The endIcon is the button's end icon.\n     */\n    endIcon?: ComponentChildren;\n\n    /**\n     * Specifies that the button element should be disabled.\n     */\n    isDisabled?: boolean;\n\n    /**\n     * Specifies if repeated events are dispatched for key or pointer held down\n     */\n    isRepeat?: boolean;\n\n    /**\n     * label - button label, used for accessibility if no override\n     */\n    label?: string;\n\n    /**\n     * accessibleLabel - override label for accessibility\n     */\n    accessibleLabel?: string;\n\n    /**\n     * Indicates in what states the button has chrome (background and border).\n     *     \"borderless\"': \"Borderless buttons are the least prominent variation.\n     * Borderless buttons are useful for supplemental actions that require minimal emphasis.\",\n     *     \"outlined\"': \"Outlined buttons are salient, but lighter weight than\n     * solid buttons. Outlined buttons are useful for secondary actions.\",\n     *     \"solid\"': \"Solid buttons stand out, and direct the user's attention to the\n     *  most important actions in the UI.\",\n     *     \"callToAction\"': \"A Call To Action (CTA) button guides the user to take or\n     * complete the action that is the main goal of the page or page section. There\n     * should only be one CTA button on a page at any given time.\",\n     *     \"danger\"': \"A Danger button alerts the user to a dangerous situation.\",\n     */\n    variant?: ComponentProps<typeof BaseButton>['variant'];\n\n    /**\n     * The size indicates how large the button is rendered.\n     */\n    size?: ComponentProps<typeof BaseButton>['size'];\n\n    /**\n     * Edge can be used to specify that the button is intended to go at the bottom of\n     * a region, stretching from left to right.\n     */\n    edge?: ComponentProps<typeof BaseButton>['edge'];\n\n    /**\n     * Triggered when a button is clicked, whether by keyboard, mouse, or touch events.\n     */\n    onAction?: () => void | null;\n\n    /**\n     * Display indicates whether the label, the icons, or all elements should be rendered by the button.\n     */\n    display?: ComponentProps<typeof ButtonLayout>['display'];\n\n    /**\n     * The title is used to provide a tooltip.\n     */\n    title?: string;\n  };\n\nexport const Button = forwardRef(\n  (\n    {\n      variant = 'outlined',\n      isDisabled = false,\n      isRepeat = false,\n      size = 'md',\n      display = 'all',\n      endIcon,\n      startIcon,\n      autofocus,\n      edge,\n      onAction,\n      label = '',\n      accessibleLabel,\n      title,\n      width\n    }: Props,\n    ref?: Ref<HTMLButtonElement>\n  ) => {\n    const labelOnly = (!startIcon && !endIcon) || display === 'label';\n    const content = labelOnly ? (\n      label\n    ) : (\n      <ButtonLayout display={display} startIcon={startIcon} endIcon={endIcon} size={size}>\n        {label}\n      </ButtonLayout>\n    );\n    return (\n      <BaseButton\n        ref={ref as Ref<HTMLButtonElement> & Ref<HTMLAnchorElement> & Ref<HTMLSpanElement>}\n        isDisabled={isDisabled}\n        isRepeat={isRepeat}\n        size={size}\n        width={width}\n        autofocus={autofocus}\n        edge={edge}\n        variant={variant}\n        styling={[labelOnly ? 'default' : 'min']}\n        onAction={onAction}\n        accessibleLabel={accessibleLabel ?? (display === 'icons' ? label : undefined)}\n        title={title ?? (display === 'icons' ? accessibleLabel ?? label : undefined)}\n        aria-label={display === 'icons' ? label : null}>\n        {content}\n      </BaseButton>\n    );\n  }\n);\n"],"names":["compStyles","isNullOrUndefined","value","undefined","ButtonLayout","_a","size","display","styling","props","__rest","labelClass","label","isEmbedded","textStartIcon","startIcon","textEndIcon","endIcon","endIconClass","icon","text","isTwoIcons","endText","startText","forwardRef","_jsx","BaseButton"],"mappings":";;;;;;;;;;;;AA8CA,MAAAA,UAAA,GAAA;QAAA,UAAA;QAAA,UAAA;aAAA,UAAA;WAAA,UAAA;aAAA,UAAA;iBAAA,QAAA;WAAA,QAAA;;AAAA,CAAA,CAAA;;AAkEA,MAAAC,iBAAA,GAAAC,KAAA,IAAA;AAGE,EAAA,OAAAA,KAAA,KAAA,IAAA,IAAAA,KAAA,KAAAC,SAAA,CAAA;AACF,CAJA,CAAA;;AAMA,SAAAC,YAAA,CAAAC,EAAA,EAAA;EAA6B,IAAA;AAAAC,IAAAA,IAAA,GAAA,IAAA;AAAAC,IAAAA,OAAA,GAAA,KAAA;AAAAC,IAAAA,OAAA,GAAA,SAAA;AAAA,GAAA,GAAAH,EAAA;AAAA,MAAAI,KAAA,GAAAC,gBAAA,CAAAL,EAAA,EAAA,CAAA,MAAA,EAAA,SAAA,EAAA,SAAA,CAAA,CAAA,CAAA;;;;AAQ3B,EAAA,MAAAM,UAAA,GAAAX,UAAA,CAAAY,KAAA,CAAA;;AAEA,EAAA,MAAAC,UAAA,GAAAL,OAAA,KAAA,UAAA,CAAA;AACA,EAAA,MAAAM,aAAA,GAAA,CAAAb,iBAAA,CAAAQ,KAAA,CAAAM,SAAA,CAAA,IAAAR,OAAA,KAAA,KAAA,CAAA;AACA,EAAA,MAAAS,WAAA,GAAA,CAAAf,iBAAA,CAAAQ,KAAA,CAAAQ,OAAA,CAAA,IAAAV,OAAA,KAAA,KAAA,CAAA;;AAGA,EAAA,MAAAW,YAAA,GAAA,CAAAlB,EAAAA,UAAA,CAAAmB,IAAA,CAAAb,oBAAAA,EAAAA,IAAA,CAAAN,CAAAA,EAAAA,UAAA,CAAAiB,OAAA,CAAA,CAAA,CAAA;iDAEEjB,UAAA,CAAAmB;4CAKAnB,UAAA,CAAAoB,MACAN,aAAA,IAAA,CAAAO,UAAA,IAAArB,UAAA,CAAAsB,SACAN,WAAA,IAAA,CAAAK,UAAA,IAAArB,UAAA,CAAAuB;;;;;;;;;;;;;;;;;;AAUJ;;MC5Da,MAAM,GAAGC,iBAAU,CAC9B,CACE,EACE,OAAO,GAAG,UAAU,EACpB,UAAU,GAAG,KAAK,EAClB,QAAQ,GAAG,KAAK,EAChB,IAAI,GAAG,IAAI,EACX,OAAO,GAAG,KAAK,EACf,OAAO,EACP,SAAS,EACT,SAAS,EACT,IAAI,EACJ,QAAQ,EACR,KAAK,GAAG,EAAE,EACV,eAAe,EACf,KAAK,EACL,KAAK,EACC,EACR,GAA4B,KAC1B;AACF,IAAA,MAAM,SAAS,GAAG,CAAC,CAAC,SAAS,IAAI,CAAC,OAAO,KAAK,OAAO,KAAK,OAAO,CAAC;AAClE,IAAA,MAAM,OAAO,GAAG,SAAS,IACvB,KAAK,KAELC,cAAA,CAAC,YAAY,EAAC,MAAA,CAAA,MAAA,CAAA,EAAA,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAA,EAAA,EAAA,QAAA,EAC/E,KAAK,EAAA,CAAA,CACO,CAChB,CAAC;IACF,QACEA,cAAC,CAAAC,qBAAU,EACT,MAAA,CAAA,MAAA,CAAA,EAAA,GAAG,EAAE,GAA6E,EAClF,UAAU,EAAE,UAAU,EACtB,QAAQ,EAAE,QAAQ,EAClB,IAAI,EAAE,IAAI,EACV,KAAK,EAAE,KAAK,EACZ,SAAS,EAAE,SAAS,EACpB,IAAI,EAAE,IAAI,EACV,OAAO,EAAE,OAAO,EAChB,OAAO,EAAE,CAAC,SAAS,GAAG,SAAS,GAAG,KAAK,CAAC,EACxC,QAAQ,EAAE,QAAQ,EAClB,eAAe,EAAE,eAAe,KAAf,IAAA,IAAA,eAAe,cAAf,eAAe,IAAK,OAAO,KAAK,OAAO,GAAG,KAAK,GAAG,SAAS,CAAC,EAC7E,KAAK,EAAE,KAAK,KAAA,IAAA,IAAL,KAAK,KAAA,KAAA,CAAA,GAAL,KAAK,IAAK,OAAO,KAAK,OAAO,GAAG,eAAe,KAAA,IAAA,IAAf,eAAe,KAAA,KAAA,CAAA,GAAf,eAAe,GAAI,KAAK,GAAG,SAAS,CAAC,EAChE,YAAA,EAAA,OAAO,KAAK,OAAO,GAAG,KAAK,GAAG,IAAI,EAC7C,EAAA,EAAA,QAAA,EAAA,OAAO,EACG,CAAA,CAAA,EACb;AACJ,CAAC;;;;;;;;"}