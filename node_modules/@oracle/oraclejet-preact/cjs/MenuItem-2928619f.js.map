{"version":3,"file":"MenuItem-2928619f.js","sources":["../../src/UNSAFE_Menu/MenuContext.ts","../../src/UNSAFE_Menu/useMenuContext.ts","../../src/UNSAFE_Menu/MenuItem.tsx"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { createContext, ComponentProps } from 'preact';\n\nimport { Menu } from './Menu';\n\ntype Props = {\n  onClose: ComponentProps<typeof Menu>['onClose'];\n  currentKey?: string;\n  showFocusRing: boolean;\n};\n\n/**\n * Context used to pass menu information without having to pass it to menu children props.\n * We want to communicate information down to any interested menu item children.\n */\nconst MenuContext = createContext<Props>({\n  onClose: () => null,\n  currentKey: undefined,\n  showFocusRing: false\n});\n\nexport { MenuContext };\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { useContext } from 'preact/hooks';\n\nimport { MenuContext } from './MenuContext';\n\n/**\n * Utility hook for consuming the MenuContext\n *\n * @returns The value of MenuContext provider\n */\nfunction useMenuContext() {\n  return useContext(MenuContext);\n}\n\nexport { useMenuContext };\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport { useLayoutEffect, useRef, useMemo } from 'preact/hooks';\nimport { ComponentChildren } from 'preact';\n\nimport { Text } from '../UNSAFE_Text';\nimport { cssProps } from '@oracle/oraclejet-cssprops';\nimport { useHover } from '../hooks/UNSAFE_useHover';\nimport { classNames } from '../utils/UNSAFE_classNames';\nimport { useId } from '../hooks/UNSAFE_useId';\nimport { mergeProps } from '../utils/UNSAFE_mergeProps';\nimport { usePress } from '../hooks/UNSAFE_usePress';\nimport { getClientHints } from '../utils/PRIVATE_clientHints';\n\nimport { useMenuContext } from './useMenuContext';\n\nconst styles = {\n  menuItemContainer: cssProps`${{\n    cursor: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-cursor-clickable) !important',\n    width: '100%',\n    paddingTop: 'var(--oj-PRIVATE-DO-NOT-USE-collection-list-cell-padding-vertical)',\n    paddingBottom: 'var(--oj-PRIVATE-DO-NOT-USE-collection-list-cell-padding-vertical)',\n    paddingInlineStart: 'var(--oj-c-PRIVATE-DO-NOT-USE-menu-start-edge-to-start-icon-padding)',\n    paddingInlineEnd: 'var(--oj-c-PRIVATE-DO-NOT-USE-menu-end-icon-to-end-edge-padding)',\n    boxSizing: 'border-box',\n    minHeight: 'var( --oj-c-PRIVATE-NOT-USE-collection-list-row-height)',\n    display: 'flex',\n    textAlign: 'start',\n    alignItems: 'center',\n    textDecorationLine: 'none !important',\n    outlineStyle: 'none'\n  }}`,\n  focused: cssProps`${{\n    outlineStyle: 'dotted',\n    outlineOffset: '1px',\n    outlineWidth: '1px',\n    outlineColor: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-focus-border-color)'\n  }}`,\n  variant: {\n    default: {\n      menuItemContainer: cssProps`${{\n        '&:active': {\n          backgroundColor: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-bg-color-active)'\n        },\n        color: 'var(--oj-c-PRIVATE-DO-NOT-USE-menu-text-color)'\n      }}`,\n      hover: cssProps`${{\n        // @ts-ignore\n        '&:not(:active)': {\n          backgroundColor: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-bg-color-hover)'\n        }\n      }}`,\n      pseudohover: cssProps`${{\n        // @ts-ignore\n        '@media(hover: hover)': {\n          '&:hover:not(:active)': {\n            backgroundColor: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-bg-color-hover)'\n          }\n        }\n      }}`\n    },\n    destructive: {\n      menuItemContainer: cssProps`${{\n        //Not needed since hover and active share same style but active state style could change at some point\n        '&:active': {\n          backgroundColor: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-bg-color-danger-hover)',\n          color: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-text-color-danger)'\n        },\n        color: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-text-color-danger-low)'\n      }}`,\n      hover: cssProps`${{\n        backgroundColor: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-bg-color-danger-hover)',\n        color: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-text-color-danger)'\n      }}`,\n      pseudohover: cssProps`${{\n        // @ts-ignore\n        '@media(hover: hover)': {\n          '&:hover': {\n            backgroundColor: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-bg-color-danger-hover)',\n            color: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-text-color-danger)'\n          }\n        }\n      }}`\n    }\n  },\n  iconLabelContainer: cssProps`${{\n    display: 'flex',\n    alignItems: 'center',\n    overflowX: 'hidden',\n    overflowY: 'hidden'\n  }}`,\n  labelContainer: cssProps`${{\n    flexGrow: 1,\n    minHeight: 'var(--oj-c-PRIVATE-DO-NOT-USE-menu-icon-size)'\n  }}`,\n  iconContainer: cssProps`${{\n    flexShrink: 0,\n    fontSize: 'var(--oj-c-PRIVATE-DO-NOT-USE-menu-icon-size)',\n    height: 'var(--oj-c-PRIVATE-DO-NOT-USE-menu-icon-size)',\n    width: 'var(--oj-c-PRIVATE-DO-NOT-USE-menu-icon-size)'\n  }}`,\n  startIconContainer: cssProps`${{\n    marginInlineEnd: 'var(--oj-c-PRIVATE-DO-NOT-USE-menu-start-icon-to-label-padding)'\n  }}`,\n  endIconContainer: cssProps`${{\n    marginInlineStart: 'var(--oj-c-PRIVATE-DO-NOT-USE-menu-label-to-end-icon-padding)'\n  }}`,\n  disabledContainer: cssProps`${{\n    cursor: 'default !important',\n    color: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-text-color-disabled)'\n  }}`\n};\n\ntype BaseMenuItemProps = (SimpleMenuItemProps | SelectMenuItemProps) & BaseBaseMenuItemProps;\n\ntype BaseBaseMenuItemProps = {\n  label: string;\n  onAction?: () => void;\n  startIcon?: ComponentChildren;\n  endIcon?: ComponentChildren;\n  isDisabled?: boolean;\n};\n\ntype SimpleMenuItemProps = {\n  role: 'menuitem';\n  variant?: 'default' | 'destructive';\n  isChecked?: never;\n};\n\ntype SelectMenuItemProps = {\n  role: 'menuitemcheckbox' | 'menuitemradio';\n  variant?: never;\n  isChecked?: boolean;\n};\n\ntype MenuItemProps = BaseBaseMenuItemProps & {\n  variant?: 'default' | 'destructive';\n};\n\nexport function MenuItem(props: MenuItemProps) {\n  return <BaseMenuItem {...props} role=\"menuitem\"></BaseMenuItem>;\n}\n\nconst isHybrid = getClientHints().isHybrid;\n\nexport function BaseMenuItem({\n  label,\n  onAction,\n  startIcon,\n  endIcon,\n  role,\n  isChecked,\n  isDisabled = false,\n  variant = 'default'\n}: BaseMenuItemProps) {\n  const { onClose, currentKey, showFocusRing } = useMenuContext();\n\n  const uniqueID = useId();\n  const id = useMemo(() => `oj-menu-item-${uniqueID}`, [uniqueID]);\n  const isCurrent = currentKey === id;\n\n  const menuItemRef = useRef<HTMLAnchorElement | null>(null);\n\n  const { hoverProps, isHover } = useHover({ isDisabled: !isHybrid });\n\n  const handleItemSelection = () => {\n    onClose?.({ reason: 'itemAction' });\n    onAction?.();\n  };\n\n  const { pressProps } = usePress(handleItemSelection, { isDisabled });\n\n  useLayoutEffect(() => {\n    if (isCurrent) {\n      menuItemRef.current?.focus();\n    }\n  }, [isCurrent]);\n\n  const menuItemContainerClasses = classNames([\n    styles.menuItemContainer,\n    !isDisabled && styles.variant[variant].menuItemContainer,\n    isDisabled && styles.disabledContainer,\n    !isHybrid && !isDisabled && styles.variant[variant].pseudohover,\n    isHybrid && isHover && !isDisabled && styles.variant[variant].hover,\n    isCurrent && !!showFocusRing && styles.focused\n  ]);\n\n  const startIconContainerClasses = classNames([\n    styles.iconLabelContainer,\n    styles.iconContainer,\n    styles.startIconContainer\n  ]);\n\n  const labelContainerClasses = classNames([styles.iconLabelContainer, styles.labelContainer]);\n\n  const endIconContainerClasses = classNames([\n    styles.iconLabelContainer,\n    styles.iconContainer,\n    styles.endIconContainer\n  ]);\n\n  return (\n    <a\n      ref={menuItemRef}\n      class={menuItemContainerClasses}\n      {...mergeProps(hoverProps, pressProps)}\n      role={role}\n      data-oj-menu-item-key={id}\n      {...(isDisabled && { 'aria-disabled': true })}\n      {...(role !== 'menuitem' && { 'aria-checked': isChecked })}\n      tabIndex={isCurrent ? 0 : -1}>\n      {startIcon && <span class={startIconContainerClasses}>{startIcon}</span>}\n      <span class={labelContainerClasses}>\n        <Text variant=\"inherit\" size=\"md\">\n          {label}\n        </Text>\n      </span>\n      {endIcon && <span class={endIconContainerClasses}>{endIcon}</span>}\n    </a>\n  );\n}\n"],"names":["createContext","useContext","styles","variant","default","destructive","MenuItem","props","isHybrid","getClientHints","BaseMenuItem","label","onAction","startIcon","endIcon","role","isChecked","isDisabled","uniqueID","useId","id","useMemo","isCurrent","currentKey","menuItemRef","useRef","hoverProps","isHover","useHover","pressProps","usePress","handleItemSelection","_a","current","focus","menuItemContainer","pseudohover","hover","showFocusRing","focused","iconLabelContainer","iconContainer","startIconContainer","labelContainerClasses","classNames","labelContainer","endIconContainer"],"mappings":"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"}