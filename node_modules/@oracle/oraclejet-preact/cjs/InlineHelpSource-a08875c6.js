/* @oracle/oraclejet-preact: 14.0.4 */
'use strict';

var jsxRuntime = require('preact/jsx-runtime');

var hooks_UNSAFE_useTabbableMode = require('./hooks/UNSAFE_useTabbableMode.js');
var hooks_UNSAFE_useTranslationBundle = require('./hooks/UNSAFE_useTranslationBundle.js');

const rootStyles = "l31xvo";
function InlineHelpSource({
  children,
  source
}) {
  const translations = hooks_UNSAFE_useTranslationBundle.useTranslationBundle('@oracle/oraclejet-preact');
  const userAssistance_learnMoreStr = translations.userAssistance_learnMore();
  children = children !== null && children !== void 0 ? children : userAssistance_learnMoreStr; // JET-52914 - Implement Tabbable mode API contract in InputText
  // if not tabbable, spread tabbableModeProps on component

  const {
    isTabbable,
    tabbableModeProps
  } = hooks_UNSAFE_useTabbableMode.useTabbableMode(); // TODO: Implement and use a preact Link component instead of using an anchor tag

  return jsxRuntime.jsx("a", Object.assign({
    class: rootStyles,
    target: "_blank",
    href: source
  }, !isTabbable && tabbableModeProps, {
    children: children
  }));
}

exports.InlineHelpSource = InlineHelpSource;
/*  */
//# sourceMappingURL=InlineHelpSource-a08875c6.js.map
