/* @oracle/oraclejet-preact: 14.0.4 */
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('preact/jsx-runtime');
require("identity-obj-proxy");
var InlineHelpSource = require('./InlineHelpSource-a08875c6.js');
require('./utils/UNSAFE_classNames.js');
var hooks_UNSAFE_useTranslationBundle = require('./hooks/UNSAFE_useTranslationBundle.js');
var classNames = require('./classNames-fe0c9b44.js');
require('./UNSAFE_ComponentMessage.js');
var hooks_UNSAFE_useFormContext = require('./hooks/UNSAFE_useFormContext.js');
var hooks_UNSAFE_useFormFieldContext = require('./hooks/UNSAFE_useFormFieldContext.js');
var ComponentMessageContainer = require('./ComponentMessageContainer-8a5a2ea4.js');
require('./hooks/UNSAFE_useTabbableMode.js');
require('preact');
require('preact/hooks');
require('./UNSAFE_Environment.js');
require('./UNSAFE_Layer.js');
require('preact/compat');
require('./ComponentMessage-1905b2ad.js');
require('./PRIVATE_Message.js');
require('./UNSAFE_Flex.js');
require('./Flex-70f45c1b.js');
require('./tslib.es6-e79a0c43.js');
require('./utils/UNSAFE_interpolations/dimensions.js');
require('./utils/UNSAFE_arrayUtils.js');
require('./utils/UNSAFE_size.js');
require('./_curry1-8dba47c0.js');
require('./utils/UNSAFE_mergeInterpolations.js');
require('./_curry3-a11ae74a.js');
require('./_curry2-35fe759b.js');
require('./_has-f646b7fa.js');
require('./utils/UNSAFE_interpolations/boxalignment.js');
require('./keys-fcc45418.js');
require('./utils/UNSAFE_interpolations/flexbox.js');
require('./flexbox-e7360e12.js');
require('./utils/UNSAFE_interpolations/flexitem.js');
require('./flexitem-21bb492c.js');
require('./utils/PRIVATE_timer.js');
require('./MessageCloseButton-a750b114.js');
require('./UNSAFE_Button.js');
require('./Button-fe40b39e.js');
require('./UNSAFE_BaseButton.js');
require('./BaseButton-1c38289b.js');
require('./hooks/UNSAFE_usePress.js');
require('./hooks/UNSAFE_useHover.js');
require('./hooks/UNSAFE_useToggle.js');
require('./hooks/UNSAFE_useActive.js');
require('./utils/PRIVATE_clientHints.js');
require('./clientHints-6f362777.js');
require('./utils/UNSAFE_mergeProps.js');
require('./index-7cf551b0.js');
require('./index-fbc2a690.js');
require('./UNSAFE_Icon.js');
require('./Icon-837976e5.js');
require('./hooks/UNSAFE_useTooltip.js');
require('./hooks/UNSAFE_useId.js');
require('./UNSAFE_Floating.js');
require('./Floating-cea8b705.js');
require('./index-b2f63b8c.js');
require('./hooks/UNSAFE_useUser.js');
require('./utils/PRIVATE_floatingUtils.js');
require('./utils/PRIVATE_refUtils.js');
require('./hooks/UNSAFE_useOutsideClick.js');
require('./hooks/UNSAFE_useFocus.js');
require('./hooks/UNSAFE_useTouch.js');
require('./hooks/UNSAFE_useAnimation.js');
require('./useAnimation-694a2e01.js');
require('./hooks/UNSAFE_useTheme.js');
require('./MessageDetail-7665d979.js');
require('./MessageFormattingUtils-55602416.js');
require('./utils/UNSAFE_getLocale.js');
require('./utils/UNSAFE_stringUtils.js');
require('./stringUtils-1981a409.js');
require('./Message.types-927ccb0d.js');
require('./MessageStartIcon-69d47882.js');
require('./MessageSummary-b3abe0a3.js');
require('./MessageTimestamp-bcf4ac8d.js');
require('./MessageUtils-8466a219.js');
require('./utils/UNSAFE_logger.js');
require('./utils/UNSAFE_soundUtils.js');
require('./MessagesManager-ebefea19.js');
require('./PRIVATE_TransitionGroup.js');
require('./hooks/UNSAFE_useMessagesContext.js');
require('./UNSAFE_HiddenAccessible.js');
require('./HiddenAccessible-4269453d.js');

const helpTextStyles = "_1mbgh5t";
function InlineHelp({
  assistiveText,
  sourceLink,
  sourceText
}) {
  return jsxRuntime.jsxs("div", {
    children: [assistiveText && sourceLink ? jsxRuntime.jsx("span", Object.assign({
      class: helpTextStyles
    }, {
      children: assistiveText
    })) : assistiveText, sourceLink && jsxRuntime.jsx(InlineHelpSource.InlineHelpSource, Object.assign({
      source: sourceLink
    }, {
      children: sourceText
    }))]
  });
}

const variantStyles$1 = {
  start: "fpoe0j",
  end: "u5cj8l"
};
const displayHiddenStyles = "c56yas";
function InlineRequired({
  align = 'end',
  hasHelp = false,
  hasMessages = false
}) {
  const classes = classNames.classNames([variantStyles$1[align], (hasHelp || hasMessages) && displayHiddenStyles]);
  const translations = hooks_UNSAFE_useTranslationBundle.useTranslationBundle('@oracle/oraclejet-preact');
  const requiredStr = translations.userAssistance_required();
  return jsxRuntime.jsx("div", Object.assign({
    class: classes
  }, {
    children: requiredStr
  }));
}

const baseStyles = "_1oz20i0";
const variantStyles = {
  reflow: "_1w5mzoo",
  efficient: "_1tgv96c"
}; // defaults to type='reflow'. If this is within an oj-form-layout, the o-f-l
// will pass down its type which defaults to 'efficient' (TODO).

function InlineUserAssistanceContainer({
  variant = 'reflow',
  children,
  id
}) {
  const classes = classNames.classNames([baseStyles, variantStyles[variant]]);
  return jsxRuntime.jsx("div", Object.assign({
    class: classes,
    id: id
  }, {
    children: children
  }));
}

// This has the precedence rules for the user assistance.
function InlineUserAssistance({ assistiveText, fieldLabel, helpSourceLink, helpSourceText, id, isRequiredShown, messages = [], userAssistanceDensity }) {
    const { isReadonly: isFormReadonly } = hooks_UNSAFE_useFormContext.useFormContext();
    const needsUserAssistanceIfNoContent = userAssistanceDensity === 'efficient' && isFormReadonly === false;
    const { isFocused } = hooks_UNSAFE_useFormFieldContext.useFormFieldContext();
    const uaInlineContent = messages.length > 0 ? (jsxRuntime.jsx(ComponentMessageContainer.ComponentMessageContainer, { fieldLabel: fieldLabel, messages: messages })) : (assistiveText || helpSourceLink) && isFocused ? (jsxRuntime.jsx(InlineHelp, { assistiveText: assistiveText, sourceLink: helpSourceLink, sourceText: helpSourceText })) : isRequiredShown ? (jsxRuntime.jsx(InlineRequired, {})) : null;
    // when reflow we do not render unless it has content.
    // when efficient we render regardless of if it has content.
    // TODO: Get the userAssistanceDensity value from the FormContext
    return uaInlineContent || needsUserAssistanceIfNoContent ? (jsxRuntime.jsx(InlineUserAssistanceContainer, Object.assign({ id: id, variant: userAssistanceDensity }, { children: uaInlineContent }))) : null;
}

exports.InlineHelpSource = InlineHelpSource.InlineHelpSource;
exports.InlineHelp = InlineHelp;
exports.InlineRequired = InlineRequired;
exports.InlineUserAssistance = InlineUserAssistance;
exports.InlineUserAssistanceContainer = InlineUserAssistanceContainer;
/*  */
//# sourceMappingURL=UNSAFE_UserAssistance.js.map
