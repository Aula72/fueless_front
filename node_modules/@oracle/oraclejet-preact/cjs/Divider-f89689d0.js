/* @oracle/oraclejet-preact: 14.0.4 */
'use strict';

var jsxRuntime = require('preact/jsx-runtime');

var utils_UNSAFE_mergeInterpolations = require('./utils/UNSAFE_mergeInterpolations.js');

const styles = {
  orientation: {
    horizontal: "_5mnwdc"
  }
};
const interpolations = [({
  orientation = 'horizontal'
}) => ({
  class: styles.orientation[orientation]
})];
const styleInterpolations = utils_UNSAFE_mergeInterpolations.mergeInterpolations(interpolations); // TODO - Support vertical orientation

function Divider() {
  const {
    class: cls
  } = styleInterpolations({
    orientation: 'horizontal'
  }); // TODO - Check  with archs if this should be a polymorphic component and if the answer is yes, implement it

  return jsxRuntime.jsx("span", {
    class: cls,
    role: "separator",
    "aria-orientation": "horizontal"
  });
}

exports.Divider = Divider;
/*  */
//# sourceMappingURL=Divider-f89689d0.js.map
