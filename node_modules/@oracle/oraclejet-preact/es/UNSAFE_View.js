/* @oracle/oraclejet-preact: 14.0.4 */
import { _ as __rest } from './tslib.es6-5eaa88c2.js';
import { jsx } from 'preact/jsx-runtime';
import { forwardRef } from 'preact/compat';
import { borderInterpolations } from './utils/UNSAFE_interpolations/borders.js';
import { dimensionInterpolations } from './utils/UNSAFE_interpolations/dimensions.js';
import { flexitemInterpolations } from './utils/UNSAFE_interpolations/flexitem.js';
import { colorInterpolations } from './utils/UNSAFE_interpolations/colors.js';
import { paddingInterpolations } from './utils/UNSAFE_interpolations/padding.js';
import { ariaInterpolations } from './utils/UNSAFE_interpolations/aria.js';
import { mergeInterpolations } from './utils/UNSAFE_mergeInterpolations.js';
import { stringLiteralArray } from './utils/UNSAFE_arrayUtils.js';
import './utils/UNSAFE_size.js';
import './_curry1-f2673bab.js';

import './keys-c1c34836.js';
import './_has-cbbf4e16.js';
import './utils/UNSAFE_classNames.js';
import './_curry3-6b8e8079.js';
import './_curry2-d7587d88.js';

const elementTypes = stringLiteralArray(['div', 'main', 'article', 'section', 'aside']);
const interpolations = [
    ...Object.values(borderInterpolations),
    ...Object.values(dimensionInterpolations),
    ...Object.values(flexitemInterpolations),
    ...Object.values(colorInterpolations),
    ...Object.values(paddingInterpolations),
    ...Object.values(ariaInterpolations)
];
const mergedInterpolations = mergeInterpolations(interpolations);
const View = forwardRef((props, ref) => {
    const { as, children } = props, rest = __rest(props, ["as", "children"]);
    const _a = mergedInterpolations(rest), { class: cls, ariaLabelledBy, ariaLabel } = _a, styles = __rest(_a, ["class", "ariaLabelledBy", "ariaLabel"]);
    // we hardcode box-sizing: border-box on all of our Preact components.
    styles['boxSizing'] = 'border-box';
    const Component = as || 'div';
    return (jsx(Component, Object.assign({ "aria-label": ariaLabel, "aria-labelledby": ariaLabelledBy, class: cls, style: styles, ref: ref }, { children: children })));
});

export { View, elementTypes };
/*  */
//# sourceMappingURL=UNSAFE_View.js.map
