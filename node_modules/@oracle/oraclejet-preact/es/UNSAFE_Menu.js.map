{"version":3,"file":"UNSAFE_Menu.js","sources":["../../src/UNSAFE_Menu/MenuContext.ts","../../src/UNSAFE_Menu/useMenuCurrentKey.ts","../../src/UNSAFE_Menu/menuUtils.ts","../../src/UNSAFE_Menu/Menu.tsx","../../src/UNSAFE_Menu/useMenuContext.ts","../../src/UNSAFE_Menu/MenuItem.tsx","../../src/UNSAFE_Menu/MenuDivider.tsx"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { createContext, ComponentProps } from 'preact';\n\nimport { Menu } from './Menu';\n\ntype Props = {\n  onClose: ComponentProps<typeof Menu>['onClose'];\n  currentKey?: string;\n  showFocusRing: boolean;\n};\n\n/**\n * Context used to pass menu information without having to pass it to menu children props.\n * We want to communicate information down to any interested menu item children.\n */\nconst MenuContext = createContext<Props>({\n  onClose: () => null,\n  currentKey: undefined,\n  showFocusRing: false\n});\n\nexport { MenuContext };\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport { useCallback } from 'preact/hooks';\n\nimport { CurrentKeyDetail } from '../UNSAFE_Collection';\n\n/**\n * Hook for handling current key update due to user interaction including keyboard navigation.\n *\n * @param keyExtractor function to extract the key based on the provided element\n * @param getPrevKey function to get the previous key based on the current key\n * @param getNextKey function to get the next key based on the current key\n * @param getFirstVisibleKey function to get the key of the first available item\n * @param getLastVisibleKey function to get the key of the last available item\n * @param currentKey the current key\n * @param onChange function to invoke if the current key has changed\n * @returns\n */\nexport function useMenuCurrentKey(\n  keyExtractor: (element: HTMLElement) => string | null,\n  getPrevKey: () => string | null,\n  getNextKey: () => string | null,\n  getFirstVisibleKey: () => string | null,\n  getLastVisibleKey: () => string | null,\n  currentKey?: string,\n  onChange?: (detail: CurrentKeyDetail<string>) => void\n) {\n  const onKeyDown = useCallback(\n    (event: KeyboardEvent) => {\n      if (onChange) {\n        // TODO: support horizontal layout on icon menu (left/right arrow key)\n        if (event.key === 'ArrowDown' && !event.shiftKey) {\n          const nextKey = getNextKey();\n          if (nextKey && currentKey != nextKey) {\n            onChange({ value: nextKey });\n          }\n          event.preventDefault();\n        } else if (event.key === 'ArrowUp' && !event.shiftKey) {\n          const prevKey = getPrevKey();\n          if (prevKey && currentKey != prevKey) {\n            onChange({ value: prevKey });\n          }\n          event.preventDefault();\n        } else if (event.key === 'Home') {\n          const firstKey = getFirstVisibleKey();\n          if (firstKey && currentKey != firstKey) {\n            onChange({ value: firstKey });\n          }\n          event.preventDefault();\n        } else if (event.key === 'End') {\n          const lastKey = getLastVisibleKey();\n          if (lastKey && currentKey != lastKey) {\n            onChange({ value: lastKey });\n          }\n          event.preventDefault();\n        }\n      }\n    },\n    [currentKey, getNextKey, getPrevKey, onChange, getFirstVisibleKey, getLastVisibleKey]\n  );\n  //Capture needed since usePress stop propagation, what produces not triggering this event.\n  //We can't stop propagation here, because if we do that, usePress onClick will not be triggered.\n  const onClickCapture = useCallback(\n    (event: MouseEvent) => {\n      if (onChange && !event.shiftKey) {\n        const nextKey = keyExtractor(event.target as HTMLElement);\n        if (nextKey && currentKey != nextKey) {\n          onChange({ value: nextKey });\n        }\n      }\n    },\n    [currentKey, keyExtractor, onChange]\n  );\n\n  const currentKeyProps = onChange == null ? {} : { onClickCapture, onKeyDown };\n  return { currentKeyProps };\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { ComponentProps } from 'preact';\n\nimport { Menu } from './Menu';\n\n/**\n * Returns the key from the item element\n */\nconst getKey = (item: HTMLElement) => {\n  // Key is set on data-oj-menu-item-key on each menuItem. To get this key from the\n  // the actual menuItem we need to do a kebab to camel-case conversion.\n  return item.dataset['ojMenuItemKey'];\n};\n\n/**\n * A helper function that return the key of the first available item.\n */\nexport const getFirstVisibleKey = (root: HTMLElement | null) => {\n  if (root) {\n    const firstItem = root.querySelector('[data-oj-menu-item-key]');\n    if (firstItem) {\n      const key = getKey(firstItem as HTMLElement);\n      if (key) {\n        return key;\n      }\n    }\n  }\n  return null;\n};\n\n/**\n * A helper function that return the key of the last available item.\n */\nexport const getLastVisibleKey = (root: HTMLElement | null) => {\n  if (root) {\n    const items = root.querySelectorAll('[data-oj-menu-item-key]');\n    const lastItem = items[items.length - 1];\n    if (lastItem) {\n      const key = getKey(lastItem as HTMLElement);\n      if (key) {\n        return key;\n      }\n    }\n  }\n  return null;\n};\n\n/**\n * A helper function that returns the key of the previous or the next item\n * given the specified current key\n */\nexport const getPrevNextKey = (root: HTMLElement | null, isPrev: boolean, currentKey?: string) => {\n  return (): string | null => {\n    if (root) {\n      const items = Array.from(root.querySelectorAll('[data-oj-menu-item-key]')) as HTMLElement[];\n      const currentKeyIndex = items.findIndex((item) => getKey(item) === currentKey);\n      let nextIndex = currentKeyIndex + (isPrev ? -1 : 1);\n      const itemsLastIndex = items.length - 1;\n      if (nextIndex < 0) {\n        nextIndex = itemsLastIndex;\n      }\n      if (nextIndex > itemsLastIndex) {\n        nextIndex = 0;\n      }\n      return getKey(items[nextIndex]) || null;\n    }\n    return null;\n  };\n};\n\n/**\n * A helper function to get the key from an element\n */\nexport const keyExtractor = (element: HTMLElement): string | null => {\n  const item = element.closest('[data-oj-menu-item-key]');\n  if (item) {\n    const key = getKey(item as HTMLElement);\n    return key === undefined ? null : key;\n  }\n  return null;\n};\n\n/**\n * Function to get the corresponding keyboard behavior to close the menu.\n */\nexport const getKeyboardCloseProps = (onClose: ComponentProps<typeof Menu>['onClose']) => {\n  const onKeyDown = (event: KeyboardEvent) => {\n    if (event.key === 'Tab') {\n      onClose?.({ reason: 'tabbing' });\n      event.preventDefault(); //TODO: Revisit this since we should let focus be at its natural flow, quick solution for now to focus correct item in main use case\n    } else if (event.key === 'Escape') {\n      onClose?.({ reason: 'cancel' });\n    }\n  };\n  return { onKeyDown };\n};\n\n/**\n * Function to get the corresponding specific behavior for clicking/touching down menuContainer\n */\nexport const getMenuPointerDown = () => {\n  const onPointerDown = (event: PointerEvent) => {\n    //We just want to prevent default when element that was\n    //pressed down was not a menu item. Using this flag removes issues\n    //related to focus visibilty on \"long press\"\n    const nextKey = keyExtractor(event.target as HTMLElement);\n    if (!nextKey) {\n      event.preventDefault();\n    }\n  };\n  return { onPointerDown };\n};\n\nexport type MenuValueUpdateDetail<T> = {\n  previousValue?: T;\n  value: T;\n};\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { RefObject, ComponentChildren } from 'preact';\nimport { useCallback, useEffect, useRef, useState } from 'preact/hooks';\n\nimport { CurrentKeyDetail } from '../UNSAFE_Collection';\nimport { Floating } from '../UNSAFE_Floating';\nimport { Layer } from '../UNSAFE_Layer';\nimport { useOutsideClick } from '../hooks/UNSAFE_useOutsideClick';\nimport { useCollectionFocusRing } from '../hooks/PRIVATE_useCollectionFocusRing';\nimport { mergeProps } from '../utils/UNSAFE_mergeProps';\nimport { cssProps } from '@oracle/oraclejet-cssprops';\n\nimport { MenuContext } from './MenuContext';\nimport { useMenuCurrentKey } from './useMenuCurrentKey';\nimport {\n  getPrevNextKey,\n  getFirstVisibleKey,\n  keyExtractor,\n  getLastVisibleKey,\n  getKeyboardCloseProps,\n  getMenuPointerDown\n} from './menuUtils';\n\ntype MenuProps = {\n  /**\n   * Trigger element reference\n   */\n  anchorRef: RefObject<HTMLElement>;\n  /**\n   * Set of menu groups or menu items that menu will hold.Even though you could pass other type of children,\n   * is strongly recommended to use MenuItem, menu groups or components that return this type of components\n   * since passing other type of components children produces not desirable behaviors.\n   */\n  children: ComponentChildren;\n  /**\n   * Specifies if menu is opened.\n   */\n  isOpen?: boolean;\n  /**\n   * Property that triggers a callback when menu is supposed to be closed.\n   */\n  onClose?: (detail: CloseDetail) => void;\n  /**\n   * Specifies some screen reader text. Set it to create an accesible menu.\n   */\n  accessibleLabel?: string;\n  /**\n   *  Determines focus behavior when the menu is opened.\n   */\n  initialFocus?: 'menu' | 'firstItem';\n};\n\ntype CloseDetail =\n  | {\n      reason: 'cancel' | 'tabbing' | 'itemAction';\n    }\n  | {\n      reason: 'outsideClick';\n      target: Element;\n    };\n\nconst styles = {\n  // TODO: Handle vertical and horizontal overflow. Get rid of maxWidth on a next drop so horizontal and also vertical flow is handled correctly.\n  // It's hard to relay just in css, we might need to relay on some kind of observer. Maybe should be handled on Floating/Dropdown component.\n  floatingContainer: cssProps`${{\n    maxWidth: '90vw',\n    width: 'max-content',\n    borderRadius: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-border-radius-lg)',\n    boxShadow: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-dropdown-box-shadow)',\n    backgroundColor: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-bg-color-content)'\n  }}`,\n  menuContainer: cssProps`${{\n    outlineStyle: 'none',\n    // paddingTop and Bottom here so menuConatiner have same size as floatingContainer so click event has\n    // same clickable area and we can handle focus behavior\n    paddingTop: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-spacing-2x)',\n    paddingBottom: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-spacing-2x)'\n  }}`\n};\n\nexport const Menu = ({\n  children,\n  isOpen = false,\n  anchorRef,\n  onClose,\n  accessibleLabel,\n  initialFocus = 'menu'\n}: MenuProps) => {\n  const floatingRef = useRef<HTMLElement | null>(null);\n  const menuContainerRef = useRef<HTMLDivElement | null>(null);\n  const isOpenPrevValue = useRef<boolean>();\n\n  const [currentKey, setCurrentKey] = useState<string | undefined>();\n\n  const [possibleFocus, setPossibleFocus] = useState<'pending' | 'menu' | 'firstItem'>('pending');\n\n  const changeKey = useCallback((detail: CurrentKeyDetail<string>) => {\n    setCurrentKey(detail.value);\n    setPossibleFocus('firstItem');\n  }, []);\n\n  const [showFocusRing, focusRingProps] = useCollectionFocusRing(\n    (elem: Element | null) => {\n      return !!menuContainerRef.current?.contains(elem);\n    },\n    ['ArrowUp', 'ArrowDown'],\n    (elem: Element) => {\n      const nextKey = keyExtractor(elem as HTMLElement);\n      return !!nextKey;\n    }\n  );\n\n  const { currentKeyProps } = useMenuCurrentKey(\n    (element) => keyExtractor(element),\n    getPrevNextKey(menuContainerRef.current, true, currentKey),\n    getPrevNextKey(menuContainerRef.current, false, currentKey),\n    () => getFirstVisibleKey(menuContainerRef.current),\n    () => getLastVisibleKey(menuContainerRef.current),\n    currentKey,\n    changeKey\n  );\n\n  const useOutsideClickHandler = useCallback(\n    (e: MouseEvent) => {\n      onClose?.({ reason: 'outsideClick', target: e.target as Element });\n    },\n    [onClose]\n  );\n\n  useOutsideClick({\n    isDisabled: !isOpen,\n    ref: [floatingRef],\n    handler: useOutsideClickHandler\n  });\n\n  useEffect(() => {\n    if (isOpen === isOpenPrevValue.current) return;\n\n    if (isOpen) {\n      const menuContainer = menuContainerRef.current;\n      if (menuContainer) {\n        if (initialFocus === 'menu') {\n          // At this point floating has visibility set as hidden, so also menuContainer. Settimeout added so menuContainer\n          // is visible at that point and can be focused\n          setTimeout(() => {\n            menuContainer.focus();\n          }, 0);\n          setPossibleFocus('menu');\n        } else {\n          const firstItemKey = getFirstVisibleKey(menuContainerRef.current);\n          if (firstItemKey) {\n            changeKey({ value: firstItemKey });\n          } else {\n            setPossibleFocus('menu');\n          }\n        }\n      }\n    } else {\n      setPossibleFocus('pending');\n      setCurrentKey(undefined);\n    }\n\n    isOpenPrevValue.current = isOpen;\n  }, [isOpen, initialFocus, changeKey]);\n\n  // TODO - Reuse a dropdown component instead of creating floating by ourselves.\n  return !isOpen ? null : (\n    <Layer logicalParentRef={anchorRef}>\n      <Floating\n        class={styles.floatingContainer}\n        ref={floatingRef}\n        anchorRef={anchorRef}\n        placement=\"bottom-start\"\n        offsetValue={{\n          mainAxis: 4, //TODO: stable does not have a 4px gap, so we'll need to figure out how to make this themable.\n          crossAxis: 0\n        }}>\n        <MenuContext.Provider\n          value={{\n            onClose,\n            currentKey,\n            showFocusRing\n          }}>\n          <div\n            style={{\n              minWidth: `${\n                anchorRef.current && anchorRef.current.offsetWidth > MENU_MIN_WIDTH\n                  ? anchorRef.current.offsetWidth\n                  : MENU_MIN_WIDTH\n              }px`\n            }}\n            ref={menuContainerRef}\n            tabIndex={possibleFocus === 'firstItem' ? -1 : 0}\n            role=\"menu\"\n            aria-label={accessibleLabel}\n            class={styles.menuContainer}\n            {...mergeProps(\n              focusRingProps,\n              currentKeyProps,\n              getMenuPointerDown(),\n              getKeyboardCloseProps(onClose)\n            )}>\n            {children}\n          </div>\n        </MenuContext.Provider>\n      </Floating>\n    </Layer>\n  );\n};\n\nconst MENU_MIN_WIDTH = 200;\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { useContext } from 'preact/hooks';\n\nimport { MenuContext } from './MenuContext';\n\n/**\n * Utility hook for consuming the MenuContext\n *\n * @returns The value of MenuContext provider\n */\nfunction useMenuContext() {\n  return useContext(MenuContext);\n}\n\nexport { useMenuContext };\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport { useLayoutEffect, useRef, useMemo } from 'preact/hooks';\nimport { ComponentChildren } from 'preact';\n\nimport { Text } from '../UNSAFE_Text';\nimport { cssProps } from '@oracle/oraclejet-cssprops';\nimport { useHover } from '../hooks/UNSAFE_useHover';\nimport { classNames } from '../utils/UNSAFE_classNames';\nimport { useId } from '../hooks/UNSAFE_useId';\nimport { mergeProps } from '../utils/UNSAFE_mergeProps';\nimport { usePress } from '../hooks/UNSAFE_usePress';\nimport { getClientHints } from '../utils/PRIVATE_clientHints';\n\nimport { useMenuContext } from './useMenuContext';\n\nconst styles = {\n  menuItemContainer: cssProps`${{\n    cursor: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-cursor-clickable) !important',\n    width: '100%',\n    paddingTop: 'var(--oj-PRIVATE-DO-NOT-USE-collection-list-cell-padding-vertical)',\n    paddingBottom: 'var(--oj-PRIVATE-DO-NOT-USE-collection-list-cell-padding-vertical)',\n    paddingInlineStart: 'var(--oj-c-PRIVATE-DO-NOT-USE-menu-start-edge-to-start-icon-padding)',\n    paddingInlineEnd: 'var(--oj-c-PRIVATE-DO-NOT-USE-menu-end-icon-to-end-edge-padding)',\n    boxSizing: 'border-box',\n    minHeight: 'var( --oj-c-PRIVATE-NOT-USE-collection-list-row-height)',\n    display: 'flex',\n    textAlign: 'start',\n    alignItems: 'center',\n    textDecorationLine: 'none !important',\n    outlineStyle: 'none'\n  }}`,\n  focused: cssProps`${{\n    outlineStyle: 'dotted',\n    outlineOffset: '1px',\n    outlineWidth: '1px',\n    outlineColor: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-focus-border-color)'\n  }}`,\n  variant: {\n    default: {\n      menuItemContainer: cssProps`${{\n        '&:active': {\n          backgroundColor: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-bg-color-active)'\n        },\n        color: 'var(--oj-c-PRIVATE-DO-NOT-USE-menu-text-color)'\n      }}`,\n      hover: cssProps`${{\n        // @ts-ignore\n        '&:not(:active)': {\n          backgroundColor: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-bg-color-hover)'\n        }\n      }}`,\n      pseudohover: cssProps`${{\n        // @ts-ignore\n        '@media(hover: hover)': {\n          '&:hover:not(:active)': {\n            backgroundColor: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-bg-color-hover)'\n          }\n        }\n      }}`\n    },\n    destructive: {\n      menuItemContainer: cssProps`${{\n        //Not needed since hover and active share same style but active state style could change at some point\n        '&:active': {\n          backgroundColor: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-bg-color-danger-hover)',\n          color: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-text-color-danger)'\n        },\n        color: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-text-color-danger-low)'\n      }}`,\n      hover: cssProps`${{\n        backgroundColor: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-bg-color-danger-hover)',\n        color: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-text-color-danger)'\n      }}`,\n      pseudohover: cssProps`${{\n        // @ts-ignore\n        '@media(hover: hover)': {\n          '&:hover': {\n            backgroundColor: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-bg-color-danger-hover)',\n            color: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-text-color-danger)'\n          }\n        }\n      }}`\n    }\n  },\n  iconLabelContainer: cssProps`${{\n    display: 'flex',\n    alignItems: 'center',\n    overflowX: 'hidden',\n    overflowY: 'hidden'\n  }}`,\n  labelContainer: cssProps`${{\n    flexGrow: 1,\n    minHeight: 'var(--oj-c-PRIVATE-DO-NOT-USE-menu-icon-size)'\n  }}`,\n  iconContainer: cssProps`${{\n    flexShrink: 0,\n    fontSize: 'var(--oj-c-PRIVATE-DO-NOT-USE-menu-icon-size)',\n    height: 'var(--oj-c-PRIVATE-DO-NOT-USE-menu-icon-size)',\n    width: 'var(--oj-c-PRIVATE-DO-NOT-USE-menu-icon-size)'\n  }}`,\n  startIconContainer: cssProps`${{\n    marginInlineEnd: 'var(--oj-c-PRIVATE-DO-NOT-USE-menu-start-icon-to-label-padding)'\n  }}`,\n  endIconContainer: cssProps`${{\n    marginInlineStart: 'var(--oj-c-PRIVATE-DO-NOT-USE-menu-label-to-end-icon-padding)'\n  }}`,\n  disabledContainer: cssProps`${{\n    cursor: 'default !important',\n    color: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-text-color-disabled)'\n  }}`\n};\n\ntype BaseMenuItemProps = (SimpleMenuItemProps | SelectMenuItemProps) & BaseBaseMenuItemProps;\n\ntype BaseBaseMenuItemProps = {\n  label: string;\n  onAction?: () => void;\n  startIcon?: ComponentChildren;\n  endIcon?: ComponentChildren;\n  isDisabled?: boolean;\n};\n\ntype SimpleMenuItemProps = {\n  role: 'menuitem';\n  variant?: 'default' | 'destructive';\n  isChecked?: never;\n};\n\ntype SelectMenuItemProps = {\n  role: 'menuitemcheckbox' | 'menuitemradio';\n  variant?: never;\n  isChecked?: boolean;\n};\n\ntype MenuItemProps = BaseBaseMenuItemProps & {\n  variant?: 'default' | 'destructive';\n};\n\nexport function MenuItem(props: MenuItemProps) {\n  return <BaseMenuItem {...props} role=\"menuitem\"></BaseMenuItem>;\n}\n\nconst isHybrid = getClientHints().isHybrid;\n\nexport function BaseMenuItem({\n  label,\n  onAction,\n  startIcon,\n  endIcon,\n  role,\n  isChecked,\n  isDisabled = false,\n  variant = 'default'\n}: BaseMenuItemProps) {\n  const { onClose, currentKey, showFocusRing } = useMenuContext();\n\n  const uniqueID = useId();\n  const id = useMemo(() => `oj-menu-item-${uniqueID}`, [uniqueID]);\n  const isCurrent = currentKey === id;\n\n  const menuItemRef = useRef<HTMLAnchorElement | null>(null);\n\n  const { hoverProps, isHover } = useHover({ isDisabled: !isHybrid });\n\n  const handleItemSelection = () => {\n    onClose?.({ reason: 'itemAction' });\n    onAction?.();\n  };\n\n  const { pressProps } = usePress(handleItemSelection, { isDisabled });\n\n  useLayoutEffect(() => {\n    if (isCurrent) {\n      menuItemRef.current?.focus();\n    }\n  }, [isCurrent]);\n\n  const menuItemContainerClasses = classNames([\n    styles.menuItemContainer,\n    !isDisabled && styles.variant[variant].menuItemContainer,\n    isDisabled && styles.disabledContainer,\n    !isHybrid && !isDisabled && styles.variant[variant].pseudohover,\n    isHybrid && isHover && !isDisabled && styles.variant[variant].hover,\n    isCurrent && !!showFocusRing && styles.focused\n  ]);\n\n  const startIconContainerClasses = classNames([\n    styles.iconLabelContainer,\n    styles.iconContainer,\n    styles.startIconContainer\n  ]);\n\n  const labelContainerClasses = classNames([styles.iconLabelContainer, styles.labelContainer]);\n\n  const endIconContainerClasses = classNames([\n    styles.iconLabelContainer,\n    styles.iconContainer,\n    styles.endIconContainer\n  ]);\n\n  return (\n    <a\n      ref={menuItemRef}\n      class={menuItemContainerClasses}\n      {...mergeProps(hoverProps, pressProps)}\n      role={role}\n      data-oj-menu-item-key={id}\n      {...(isDisabled && { 'aria-disabled': true })}\n      {...(role !== 'menuitem' && { 'aria-checked': isChecked })}\n      tabIndex={isCurrent ? 0 : -1}>\n      {startIcon && <span class={startIconContainerClasses}>{startIcon}</span>}\n      <span class={labelContainerClasses}>\n        <Text variant=\"inherit\" size=\"md\">\n          {label}\n        </Text>\n      </span>\n      {endIcon && <span class={endIconContainerClasses}>{endIcon}</span>}\n    </a>\n  );\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { cssProps } from '@oracle/oraclejet-cssprops';\n\nimport { Divider } from '../UNSAFE_Divider';\n\nconst styles = {\n  menuDividerContainer: cssProps`${{\n    paddingTop: 'var(--oj-c-PRIVATE-DO-NOT-USE-menu-divider-vertical-padding)',\n    paddingBottom: 'var(--oj-c-PRIVATE-DO-NOT-USE-menu-divider-vertical-padding)'\n  }}`\n};\n\nexport function MenuDivider() {\n  return (\n    <div class={styles.menuDividerContainer}>\n      <Divider />\n    </div>\n  );\n}\n"],"names":["styles","Menu","children","isOpen","anchorRef","onClose","accessibleLabel","initialFocus","floatingRef","useRef","menuContainerRef","isOpenPrevValue","changeKey","useCallback","detail","setCurrentKey","value","_a","current","contains","elem","nextKey","keyExtractor","currentKeyProps","useMenuCurrentKey","element","getPrevNextKey","currentKey","getFirstVisibleKey","getLastVisibleKey","useOutsideClickHandler","e","reason","target","useOutsideClick","handler","menuContainer","firstItemKey","_jsx","Layer","Object","assign","logicalParentRef","Floating","class","floatingContainer","ref","placement","offsetValue","mainAxis","crossAxis","MenuContext","Provider","minWidth","offsetWidth","MENU_MIN_WIDTH","variant","default","destructive","MenuItem","props","isHybrid","getClientHints","BaseMenuItem","label","onAction","startIcon","endIcon","role","isChecked","isDisabled","uniqueID","useId","id","useMemo","isCurrent","menuItemRef","hoverProps","isHover","useHover","pressProps","usePress","handleItemSelection","focus","menuItemContainer","pseudohover","hover","showFocusRing","focused","iconLabelContainer","iconContainer","startIconContainer","labelContainerClasses","classNames","labelContainer","endIconContainer","MenuDivider","menuDividerContainer","Divider"],"mappings":"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"}