/* @oracle/oraclejet-preact: 14.0.4 */
import { _ as __rest } from './tslib.es6-5eaa88c2.js';
import { jsx } from 'preact/jsx-runtime';
import { k as keys_1 } from './keys-c1c34836.js';
import { stringLiteralArray } from './utils/UNSAFE_arrayUtils.js';
import "./UNSAFE_Heading.css";
import { mergeInterpolations } from './utils/UNSAFE_mergeInterpolations.js';
import './_curry1-f2673bab.js';
import './_has-cbbf4e16.js';
import './utils/UNSAFE_classNames.js';
import './_curry3-6b8e8079.js';
import './_curry2-d7587d88.js';

const headingElementTypes = stringLiteralArray(['h1', 'h2', 'h3', 'h4', 'h5', 'h6']);
const headingsizeMap = {
  h1: '2xl',
  h2: 'xl',
  h3: 'lg',
  h4: 'md',
  h5: 'sm',
  h6: 'xs'
};
const styles = {
  base: "c8jr8v",
  size: {
    xs: "docxw7",
    sm: "_1jk617g",
    md: "_1npq3ly",
    lg: "na8ijt",
    xl: "p35uav",
    '2xl': "m8728u",
    inherit: "e6hy59"
  },
  childrenMargins: "_1ey2ixr"
};
const sizeOptions = keys_1(styles.size);
const interpolations = [() => ({
  class: styles.base
}), ({
  size = '2xl'
}) => ({
  class: styles.size[size]
})];
const styleInterpolations = mergeInterpolations(interpolations);
function Heading(_a) {
  var _b;

  var {
    children
  } = _a,
      props = __rest(_a, ["children"]);

  const Component = props.as; //@ts-ignore

  props.size = (_b = props.size) !== null && _b !== void 0 ? _b : headingsizeMap[Component];

  const _c = styleInterpolations(props),
        {
    class: cls
  } = _c,
        style = __rest(_c, ["class"]);

  return jsx(Component, Object.assign({
    className: cls,
    style: style,
    id: props.id
  }, {
    children: jsx("span", Object.assign({
      className: styles.childrenMargins
    }, {
      children: children
    }))
  }));
}

export { Heading, headingElementTypes, sizeOptions };
/*  */
//# sourceMappingURL=UNSAFE_Heading.js.map
