/**
 * @license
 * Copyright (c) 2014, 2023, Oracle and/or its affiliates.
 * Licensed under The Universal Permissive License (UPL), Version 1.0
 * as shown at https://oss.oracle.com/licenses/upl/
 * @ignore
 */
/*
 * Your application specific code will go here
 */
define(['ojs/ojcontext'],
  function(Context) {

    function ControllerViewModel() {

      this.deleteCallback = function() {
        // Delete toolbar button callback
      }

      this.copyCallback = function() {
        // Copy toolbar button callback
      }

      this.editCallback = function() {
        // Edit toolbar button callback
      }

      this.downloadCallback = function() {
        // Download toolbar button callback
      }

      this.shareCallback = function() {
        // Share toolbar button callback
      }

      // Toolbar setup
      this.toolbarButtonDataSource = [
        {'id': 'delete', 'label': 'Delete', 'iconClasses': 'oj-ux-ico-trash',
        'clickCallback': this.deleteCallback.bind(this)},
        {'id': 'copy','label': 'Copy', 'iconClasses': 'oj-ux-ico-copy',
        'clickCallback': this.copyCallback.bind(this)},
        {'id': 'edit','label': 'Edit', 'iconClasses': 'oj-ux-ico-edit',
        'clickCallback': this.editCallback.bind(this)},
        {'id': 'download','label': 'Download', 'iconClasses': 'oj-ux-ico-download',
        'clickCallback': this.downloadCallback.bind(this)},
        {'id': 'share','label': 'Share', 'iconClasses': ' oj-ux-ico-share',
        'clickCallback': this.shareCallback.bind(this)}
      ];

      // Method for adjusting the content area top/bottom paddings to avoid overlap with any fixed regions.
      // This method should be called whenever your fixed region height may change.  The application
      // can also adjust content paddings with css classes if the fixed region height is not changing between
      // views.
      this.adjustContentPadding = () => {
        const topElem = document.getElementsByClassName('oj-applayout-fixed-top')[0];
        const contentElem = document.getElementsByClassName('oj-applayout-content')[0];
        const bottomElem = document.getElementsByClassName('oj-applayout-fixed-bottom')[0];

        if (topElem) {
          contentElem.style.paddingTop = topElem.offsetHeight+'px';
        }
        if (bottomElem) {
          contentElem.style.paddingBottom = bottomElem.offsetHeight+'px';
        }
        // Add oj-complete marker class to signal that the content area can be unhidden.
        // See the override.css file to see when the content area is hidden.
        contentElem.classList.add('oj-complete');
      }

      // release the application bootstrap busy state
      Context.getPageContext().getBusyContext().applicationBootstrapComplete();
    }

    return new ControllerViewModel();
  }
);
